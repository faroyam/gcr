// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gcr.proto

package gcr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Author               string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcr_a3c1a47cb0b4c887, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type NameRequets struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameRequets) Reset()         { *m = NameRequets{} }
func (m *NameRequets) String() string { return proto.CompactTextString(m) }
func (*NameRequets) ProtoMessage()    {}
func (*NameRequets) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcr_a3c1a47cb0b4c887, []int{1}
}
func (m *NameRequets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameRequets.Unmarshal(m, b)
}
func (m *NameRequets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameRequets.Marshal(b, m, deterministic)
}
func (dst *NameRequets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameRequets.Merge(dst, src)
}
func (m *NameRequets) XXX_Size() int {
	return xxx_messageInfo_NameRequets.Size(m)
}
func (m *NameRequets) XXX_DiscardUnknown() {
	xxx_messageInfo_NameRequets.DiscardUnknown(m)
}

var xxx_messageInfo_NameRequets proto.InternalMessageInfo

type NameResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameResponse) Reset()         { *m = NameResponse{} }
func (m *NameResponse) String() string { return proto.CompactTextString(m) }
func (*NameResponse) ProtoMessage()    {}
func (*NameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcr_a3c1a47cb0b4c887, []int{2}
}
func (m *NameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameResponse.Unmarshal(m, b)
}
func (m *NameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameResponse.Marshal(b, m, deterministic)
}
func (dst *NameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameResponse.Merge(dst, src)
}
func (m *NameResponse) XXX_Size() int {
	return xxx_messageInfo_NameResponse.Size(m)
}
func (m *NameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NameResponse proto.InternalMessageInfo

func (m *NameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcr_a3c1a47cb0b4c887, []int{3}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (dst *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(dst, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	ClientsCount         int64    `protobuf:"varint,1,opt,name=clientsCount,proto3" json:"clientsCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcr_a3c1a47cb0b4c887, []int{4}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (dst *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(dst, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetClientsCount() int64 {
	if m != nil {
		return m.ClientsCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "gcr.Message")
	proto.RegisterType((*NameRequets)(nil), "gcr.NameRequets")
	proto.RegisterType((*NameResponse)(nil), "gcr.NameResponse")
	proto.RegisterType((*InfoRequest)(nil), "gcr.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "gcr.InfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatRoomClient is the client API for ChatRoom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatRoomClient interface {
	Broadcast(ctx context.Context, opts ...grpc.CallOption) (ChatRoom_BroadcastClient, error)
	RandName(ctx context.Context, in *NameRequets, opts ...grpc.CallOption) (*NameResponse, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (ChatRoom_InfoClient, error)
}

type chatRoomClient struct {
	cc *grpc.ClientConn
}

func NewChatRoomClient(cc *grpc.ClientConn) ChatRoomClient {
	return &chatRoomClient{cc}
}

func (c *chatRoomClient) Broadcast(ctx context.Context, opts ...grpc.CallOption) (ChatRoom_BroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatRoom_serviceDesc.Streams[0], "/gcr.ChatRoom/Broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatRoomBroadcastClient{stream}
	return x, nil
}

type ChatRoom_BroadcastClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type chatRoomBroadcastClient struct {
	grpc.ClientStream
}

func (x *chatRoomBroadcastClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatRoomBroadcastClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatRoomClient) RandName(ctx context.Context, in *NameRequets, opts ...grpc.CallOption) (*NameResponse, error) {
	out := new(NameResponse)
	err := c.cc.Invoke(ctx, "/gcr.ChatRoom/RandName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatRoomClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (ChatRoom_InfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatRoom_serviceDesc.Streams[1], "/gcr.ChatRoom/Info", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatRoomInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatRoom_InfoClient interface {
	Recv() (*InfoResponse, error)
	grpc.ClientStream
}

type chatRoomInfoClient struct {
	grpc.ClientStream
}

func (x *chatRoomInfoClient) Recv() (*InfoResponse, error) {
	m := new(InfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatRoomServer is the server API for ChatRoom service.
type ChatRoomServer interface {
	Broadcast(ChatRoom_BroadcastServer) error
	RandName(context.Context, *NameRequets) (*NameResponse, error)
	Info(*InfoRequest, ChatRoom_InfoServer) error
}

func RegisterChatRoomServer(s *grpc.Server, srv ChatRoomServer) {
	s.RegisterService(&_ChatRoom_serviceDesc, srv)
}

func _ChatRoom_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatRoomServer).Broadcast(&chatRoomBroadcastServer{stream})
}

type ChatRoom_BroadcastServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type chatRoomBroadcastServer struct {
	grpc.ServerStream
}

func (x *chatRoomBroadcastServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatRoomBroadcastServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChatRoom_RandName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatRoomServer).RandName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gcr.ChatRoom/RandName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatRoomServer).RandName(ctx, req.(*NameRequets))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatRoom_Info_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InfoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatRoomServer).Info(m, &chatRoomInfoServer{stream})
}

type ChatRoom_InfoServer interface {
	Send(*InfoResponse) error
	grpc.ServerStream
}

type chatRoomInfoServer struct {
	grpc.ServerStream
}

func (x *chatRoomInfoServer) Send(m *InfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ChatRoom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gcr.ChatRoom",
	HandlerType: (*ChatRoomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RandName",
			Handler:    _ChatRoom_RandName_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Broadcast",
			Handler:       _ChatRoom_Broadcast_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Info",
			Handler:       _ChatRoom_Info_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gcr.proto",
}

func init() { proto.RegisterFile("gcr.proto", fileDescriptor_gcr_a3c1a47cb0b4c887) }

var fileDescriptor_gcr_a3c1a47cb0b4c887 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4e, 0xc3, 0x30,
	0x0c, 0x86, 0x15, 0x36, 0x8d, 0xd5, 0x14, 0x09, 0x72, 0x40, 0xd3, 0x4e, 0x28, 0xa7, 0x49, 0x88,
	0x31, 0x0d, 0xf1, 0x02, 0xec, 0xc4, 0x01, 0x0e, 0x79, 0x03, 0xd3, 0x99, 0x0e, 0x89, 0xc6, 0x23,
	0x76, 0x25, 0xde, 0x84, 0xd7, 0x9d, 0x92, 0xe5, 0xd0, 0xde, 0xfc, 0xff, 0xf5, 0x57, 0x7d, 0x0e,
	0x54, 0x6d, 0x13, 0xd7, 0xc7, 0xc8, 0xca, 0x76, 0xd2, 0x36, 0xd1, 0xbd, 0xc0, 0xe5, 0x3b, 0x89,
	0x60, 0x4b, 0xf6, 0x0e, 0x66, 0xd8, 0xeb, 0x81, 0xe3, 0xc2, 0xdc, 0x9b, 0x55, 0xe5, 0x4b, 0xb2,
	0x16, 0xa6, 0x4a, 0x7f, 0xba, 0xb8, 0xc8, 0x6d, 0x9e, 0xdd, 0x35, 0x5c, 0x7d, 0x60, 0x47, 0x9e,
	0x7e, 0x7b, 0x52, 0x71, 0x0e, 0xea, 0x73, 0x94, 0x23, 0x07, 0xa1, 0x84, 0x04, 0xec, 0xa8, 0xfc,
	0x28, 0xcf, 0x09, 0x79, 0x0b, 0x5f, 0x9c, 0x11, 0x51, 0xb7, 0x85, 0xfa, 0x1c, 0x0b, 0xe2, 0xa0,
	0x6e, 0x7e, 0xbe, 0x29, 0xa8, 0xec, 0xb8, 0x0f, 0x9a, 0xd1, 0x89, 0x1f, 0x75, 0xdb, 0x7f, 0x03,
	0xf3, 0xdd, 0x01, 0xd5, 0x33, 0x77, 0xf6, 0x01, 0xaa, 0xd7, 0xc8, 0xb8, 0x6f, 0x50, 0xd4, 0xd6,
	0xeb, 0x74, 0x57, 0xb9, 0x64, 0x39, 0x4a, 0x2b, 0xb3, 0x31, 0xf6, 0x09, 0xe6, 0x1e, 0xc3, 0x3e,
	0x49, 0xda, 0x9b, 0xfc, 0x75, 0xa0, 0xbf, 0xbc, 0x1d, 0x34, 0x45, 0xe7, 0x11, 0xa6, 0x49, 0xaf,
	0x2c, 0x0f, 0xc4, 0xcb, 0xf2, 0xd0, 0x7d, 0x63, 0x3e, 0x67, 0xf9, 0x49, 0x9f, 0x4f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xe3, 0x6c, 0xce, 0xb6, 0x5f, 0x01, 0x00, 0x00,
}
